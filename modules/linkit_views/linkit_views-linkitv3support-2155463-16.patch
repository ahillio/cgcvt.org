diff --git a/linkit_views.module b/linkit_views.module
index 2b38bdb..1aad219 100644
--- a/linkit_views.module
+++ b/linkit_views.module
@@ -9,7 +9,7 @@
  * Implements hook_ctools_plugin_directory().
  */
 function linkit_views_ctools_plugin_directory($module, $plugin) {
-  if ($module == 'linkit' && !empty($plugin)) {
+  if ($module == 'linkit') {
     return "plugins/" . $plugin;
   }
 }
diff --git a/plugins/linkit_plugins/linkit_views.class.php b/plugins/linkit_plugins/linkit_views.class.php
deleted file mode 100644
index 547b23a..0000000
--- a/plugins/linkit_plugins/linkit_views.class.php
+++ /dev/null
@@ -1,86 +0,0 @@
-<?php
-/**
- * Plugin class.
- */
-
-
-class LinkitViewsPlugin extends LinkitPlugin {
-
-  /**
-   * The uniq table name.
-   *
-   * @var string
-   */
-  var $table_name;
-
-  /**
-   * Initialize this plugin.
-   */
-  function __construct($plugin, $profile) {
-    parent::__construct($plugin, $profile);
-
-    $this->table_name = 'linkit_tmp_view_table_' . rand(0,1000) . rand(0,1000);
-  }
-
-  /**
-   * Created a temporary table.
-   */
-  function create_tmp_table() {
-    // If this can be done in a more nice way, please tell me.
-    $temp_table = 'CREATE TEMPORARY TABLE {' . $this->table_name . '} (human_name VARCHAR(255) NOT NULL, display_title VARCHAR(65) NOT NULL, path VARCHAR(255) NOT NULL)';
-    return db_query($temp_table);
-  }
-
-  /**
-   * Populate the temporary table with display name and path.
-   */
-  function populate_tmp_table() {
-    // Get all displays that is "page" and their path
-    $query = db_select('views_view', 'w')
-      ->condition('wd.display_plugin', 'page')
-      ->fields('wd', array('display_options', 'display_title'))
-      ->fields('w', array('human_name'));
-    $query->join('views_display', 'wd', 'w.vid = wd.vid');
-
-    $result = $query->execute();
-
-    foreach ($result AS $view) {
-      $optinos = unserialize($view->display_options);
-      $fields = array(
-        'display_title' => $view->display_title,
-        'human_name' => $view->human_name,
-        'path' => $optinos['path'],
-      );
-      db_insert($this->table_name)->fields($fields)->execute();
-    }
-  }
-
-  /**
-   * The autocomplete callback function for the Linkit Entity plugin.
-   */
-  function autocomplete_callback() {
-    // Create the tmp table.
-    $this->create_tmp_table();
-
-    // Populate the tmp table.
-    $this->populate_tmp_table();
-
-    $matches = array();
-
-    $query = db_select($this->table_name, 'tmp')
-      ->fields('tmp', array('path', 'display_title', 'human_name'))
-      ->condition('tmp.display_title', '%' . db_like($this->serach_string) . '%', 'LIKE')
-      ->addTag('linkit_views_autocomplete')
-      ->execute();
-
-    foreach ($query AS $view) {
-      $matches[] = array(
-        'title' => $view->display_title,
-        'path' => base_path() . $view->path,
-        'description' => t('View: %view', array('%view' => $view->human_name)),
-        'group' => t('View pages'),
-      );
-    }
-    return  $matches;
-  }
-}
\ No newline at end of file
diff --git a/plugins/linkit_plugins/linkit_views.inc b/plugins/linkit_plugins/linkit_views.inc
deleted file mode 100644
index 56eca18..0000000
--- a/plugins/linkit_plugins/linkit_views.inc
+++ /dev/null
@@ -1,14 +0,0 @@
-<?php
-/**
- * @file
- * Linkit views plugin.
- */
-
-$plugin = array(
-  'ui_title' => t("Views"),
-  'ui_description' => t('Extend Linkit with views support.'),
-  'handler' => array(
-      'class' => 'LinkitViewsPlugin',
-      'file' => 'linkit_views.class.php',
-  ),
-);
\ No newline at end of file
diff --git a/plugins/linkit_search/linkit_views.class.php b/plugins/linkit_search/linkit_views.class.php
new file mode 100644
index 0000000..0f3d49f
--- /dev/null
+++ b/plugins/linkit_search/linkit_views.class.php
@@ -0,0 +1,89 @@
+<?php
+/**
+ * Plugin class.
+ */
+
+
+class LinkitViewsPlugin extends LinkitSearchPlugin {
+
+  /**
+   * The uniq table name.
+   *
+   * @var string
+   */
+  var $table_name;
+
+  /**
+   * Initialize this plugin.
+   */
+  public function __construct($plugin, $profile) {
+    parent::__construct($plugin, $profile);
+
+    $this->table_name = 'linkit_tmp_view_table_' . rand(0,1000) . rand(0,1000);
+  }
+
+  /**
+   * Created a temporary table.
+   */
+  protected function create_tmp_table() {
+    // If this can be done in a more nice way, please tell me.
+    $temp_table = 'CREATE TEMPORARY TABLE {' . $this->table_name . '} (human_name VARCHAR(255) NOT NULL, display_title VARCHAR(65) NOT NULL, path VARCHAR(255) NOT NULL)';
+    return db_query($temp_table);
+  }
+
+  /**
+   * Populate the temporary table with display name and path.
+   */
+  protected function populate_tmp_table() {
+    // Get all displays that is "page" and their path
+    $query = db_select('views_view', 'w')
+      ->condition('wd.display_plugin', 'page')
+      ->fields('wd', array('display_options', 'display_title'))
+      ->fields('w', array('human_name'));
+    $query->join('views_display', 'wd', 'w.vid = wd.vid');
+
+    $result = $query->execute();
+
+    foreach ($result AS $view) {
+      $options = unserialize($view->display_options);
+      if (drupal_valid_path($options['path'])) {
+        $fields = array(
+          'display_title' => $view->display_title,
+          'human_name' => $view->human_name,
+          'path' => $options['path'],
+        );
+      }
+      db_insert($this->table_name)->fields($fields)->execute();
+    }
+  }
+
+  /**
+   * Implements LinkitSearchPluginInterface::fetchResults().
+   */
+  public function fetchResults($search_string) {
+    // Create the tmp table.
+    $this->create_tmp_table();
+
+    // Populate the tmp table.
+    $this->populate_tmp_table();
+
+    $matches = array();
+
+    $query = db_select($this->table_name, 'tmp')
+      ->fields('tmp', array('path', 'display_title', 'human_name'))
+      ->condition('tmp.display_title', '%' . db_like($search_string) . '%', 'LIKE')
+      ->addTag('linkit_views_autocomplete')
+      ->execute();
+
+    foreach ($query AS $view) {
+      $matches[] = array(
+        'title' => $view->display_title,
+        'path' => base_path() . $view->path,
+        'description' => t('View: %view', array('%view' => $view->human_name)),
+        'group' => t('View pages'),
+      );
+    }
+
+    return $matches;
+  }
+}
diff --git a/plugins/linkit_search/linkit_views.inc b/plugins/linkit_search/linkit_views.inc
new file mode 100644
index 0000000..00a956f
--- /dev/null
+++ b/plugins/linkit_search/linkit_views.inc
@@ -0,0 +1,14 @@
+<?php
+/**
+ * @file
+ * Linkit views plugin.
+ */
+
+$plugin = array(
+  'ui_title' => t("Views"),
+  'ui_description' => t('Extend Linkit with views support.'),
+  'handler' => array(
+    'class' => 'LinkitViewsPlugin',
+    'file' => 'linkit_views.class.php',
+  ),
+);
